/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(random_uniform_source.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(c68207de4a594de5cf9a5c21341ac131)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/analog/random_uniform_source.h>

template <typename T>
void bind_random_uniform_source_template(py::module& m, const char* classname)
{
    using random_uniform_source = gr::analog::random_uniform_source<T>;

    py::class_<random_uniform_source,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<random_uniform_source>>(m, classname)
        .def(py::init(&gr::analog::random_uniform_source<T>::make),
             py::arg("minimum"),
             py::arg("maximum"),
             py::arg("seed"));
}

void bind_random_uniform_source(py::module& m)
{
    bind_random_uniform_source_template<std::uint8_t>(m, "random_uniform_source_b");
    bind_random_uniform_source_template<std::int16_t>(m, "random_uniform_source_s");
    bind_random_uniform_source_template<std::int32_t>(m, "random_uniform_source_i");
}
