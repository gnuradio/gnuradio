id: blocks_wavfile_sink
label: Wav File Sink
flags: [ python, cpp ]

parameters:
-   id: file
    label: File
    dtype: file_save
-   id: nchan
    label: N Channels
    dtype: int
    default: '1'
    hide: part
-   id: samp_rate
    label: Sample Rate
    dtype: int
    default: samp_rate
-   id: bits_per_sample
    label: Bits per Sample
    dtype: int
    default: '8'
-   id: append
    label: Append to existing file
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']

inputs:
-   domain: stream
    dtype: float
    multiplicity: ${ nchan }

asserts:
- ${ 1 <= nchan }

templates:
    imports: from gnuradio import blocks
    make: blocks.wavfile_sink(${file}, ${nchan}, ${samp_rate}, ${bits_per_sample}, ${append})
    callbacks:
    - open(${file})

cpp_templates:
    includes: ['#include <gnuradio/blocks/wavfile_sink.h>']
    declarations: 'blocks::wavfile_sink::sptr ${id};'
    make: |-
      this->${id} = blocks::wavfile_sink::make(${file}${'.c_str()' if str(file)[0] != "'" and str(file)[0] != "\"" else ''}, ${nchan}, ${samp_rate}, ${bits_per_sample}, ${append});
    callbacks:
    ## TODO Handle std::string type when const char* argument is needed
    - this->${id}->open(${file})
    translations:
        'True': 'true'
        'False': 'false'

file_format: 1
