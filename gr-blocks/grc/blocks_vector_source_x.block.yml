id: blocks_vector_source_x
label: Vector Source
flags: [ python, cpp ]

parameters:
-   id: type
    label: Output Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        fcn: [c, f, i, s, b]
        vec_type: [complex_vector, real_vector, int_vector, int_vector, int_vector]
    hide: part
-   id: vector
    label: Vector
    dtype: raw
    default: (0, 0, 0)
-   id: tags
    label: Tags
    dtype: raw
    default: '[]'
-   id: repeat
    label: Repeat
    dtype: enum
    default: 'True'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: vlen
    label: Vec Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }

outputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }

asserts:
- ${ vlen > 0 }

templates:
    imports: from gnuradio import blocks
    make: blocks.vector_source_${type.fcn}(${vector}, ${repeat}, ${vlen}, ${tags})
    callbacks:
    - set_data(${vector}, ${tags})

cpp_templates:
    includes: ['#include <gnuradio/blocks/vector_source.h>']
    declarations: 'blocks::vector_source_${type.fcn}::sptr ${id};'
    make: 'this->${id} = blocks::vector_source_${type.fcn}::make(${vector}, ${repeat}, ${vlen}, ${tags});'
    callbacks:
    - set_data(${vector}, ${tags})
    translations:
        'True': 'true'
        'False': 'false'

file_format: 1
