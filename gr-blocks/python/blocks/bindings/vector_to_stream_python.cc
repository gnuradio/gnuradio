/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(vector_to_stream.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(4d47288cdcfe688510e55d95f64cea34)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/blocks/vector_to_stream.h>
// pydoc.h is automatically generated in the build directory
#include <vector_to_stream_pydoc.h>

void bind_vector_to_stream(py::module& m)
{

    using vector_to_stream = ::gr::blocks::vector_to_stream;


    py::class_<vector_to_stream,
               gr::sync_interpolator,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<vector_to_stream>>(
        m, "vector_to_stream", D(vector_to_stream))

        .def(py::init(&vector_to_stream::make),
             py::arg("itemsize"),
             py::arg("nitems_per_block"),
             D(vector_to_stream, make))


        ;
}
