/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(lfsr_15_1_0.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(6b2bc514206aa15787a3e9d002269784)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/blocks/lfsr_15_1_0.h>
// pydoc.h is automatically generated in the build directory
#include <lfsr_15_1_0_pydoc.h>

void bind_lfsr_15_1_0(py::module& m)
{

    using lfsr_15_1_0 = ::gr::blocks::lfsr_15_1_0;


    py::class_<lfsr_15_1_0, std::shared_ptr<lfsr_15_1_0>>(
        m, "lfsr_15_1_0", D(lfsr_15_1_0))

        .def(py::init<>(), D(lfsr_15_1_0, lfsr_15_1_0, 0))
        .def(py::init<gr::blocks::lfsr_15_1_0 const&>(),
             py::arg("arg0"),
             D(lfsr_15_1_0, lfsr_15_1_0, 1))


        .def("reset", &lfsr_15_1_0::reset, D(lfsr_15_1_0, reset))


        .def("next_bit", &lfsr_15_1_0::next_bit, D(lfsr_15_1_0, next_bit))


        .def("next_byte", &lfsr_15_1_0::next_byte, D(lfsr_15_1_0, next_byte))

        ;
}
