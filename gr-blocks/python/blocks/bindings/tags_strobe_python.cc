/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(tags_strobe.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(5341f2482a8549af151d3e13ac008e42)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/blocks/tags_strobe.h>
// pydoc.h is automatically generated in the build directory
#include <tags_strobe_pydoc.h>

void bind_tags_strobe(py::module& m)
{

    using tags_strobe = ::gr::blocks::tags_strobe;


    py::class_<tags_strobe,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<tags_strobe>>(m, "tags_strobe", D(tags_strobe))

        .def(py::init(&tags_strobe::make),
             py::arg("sizeof_stream_item"),
             py::arg("value"),
             py::arg("nsamps"),
             py::arg("key") = pmt::intern("strobe"),
             D(tags_strobe, make))


        .def("set_value",
             &tags_strobe::set_value,
             py::arg("value"),
             D(tags_strobe, set_value))


        .def("set_key", &tags_strobe::set_key, py::arg("key"), D(tags_strobe, set_key))


        .def("value", &tags_strobe::value, D(tags_strobe, value))


        .def("key", &tags_strobe::key, D(tags_strobe, key))


        .def("set_nsamps",
             &tags_strobe::set_nsamps,
             py::arg("nsamps"),
             D(tags_strobe, set_nsamps))


        .def("nsamps", &tags_strobe::nsamps, D(tags_strobe, nsamps))

        ;
}
