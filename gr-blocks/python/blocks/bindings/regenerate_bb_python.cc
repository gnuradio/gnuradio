/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(regenerate_bb.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(8172d7a94608583e0c259118f1864dd7)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/blocks/regenerate_bb.h>
// pydoc.h is automatically generated in the build directory
#include <regenerate_bb_pydoc.h>

void bind_regenerate_bb(py::module& m)
{

    using regenerate_bb = ::gr::blocks::regenerate_bb;


    py::class_<regenerate_bb,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<regenerate_bb>>(m, "regenerate_bb", D(regenerate_bb))

        .def(py::init(&regenerate_bb::make),
             py::arg("period"),
             py::arg("max_regen") = 500,
             D(regenerate_bb, make))


        .def("set_max_regen",
             &regenerate_bb::set_max_regen,
             py::arg("regen"),
             D(regenerate_bb, set_max_regen))


        .def("set_period",
             &regenerate_bb::set_period,
             py::arg("period"),
             D(regenerate_bb, set_period))


        .def("max_regen", &regenerate_bb::max_regen, D(regenerate_bb, max_regen))


        .def("period", &regenerate_bb::period, D(regenerate_bb, period))

        ;
}
