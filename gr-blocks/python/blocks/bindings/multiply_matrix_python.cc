/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(multiply_matrix.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(e99d8b091b5c8078ced8bdc3933d211d)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/blocks/multiply_matrix.h>

template <typename T>
void bind_multiply_matrix_template(py::module& m, const char* classname)
{
    using multiply_matrix = gr::blocks::multiply_matrix<T>;

    py::class_<multiply_matrix,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<multiply_matrix>>(m, classname)
        .def(py::init(&gr::blocks::multiply_matrix<T>::make),
             py::arg("A"),
             py::arg("tag_propagation_policy") = gr::block::TPP_ALL_TO_ALL)
        .def("get_A", &multiply_matrix::get_A)
        .def("set_A", &multiply_matrix::set_A, py::arg("new_A"))
        .def_readwrite("MSG_PORT_NAME_SET_A", &multiply_matrix::MSG_PORT_NAME_SET_A);
}

void bind_multiply_matrix(py::module& m)
{
    bind_multiply_matrix_template<float>(m, "multiply_matrix_ff");
    bind_multiply_matrix_template<gr_complex>(m, "multiply_matrix_cc");
}
