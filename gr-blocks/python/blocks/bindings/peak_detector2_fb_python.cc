/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(peak_detector2_fb.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(7f3fbeb13715fe8bf8bcabe517fdc444)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/blocks/peak_detector2_fb.h>
// pydoc.h is automatically generated in the build directory
#include <peak_detector2_fb_pydoc.h>

void bind_peak_detector2_fb(py::module& m)
{

    using peak_detector2_fb = ::gr::blocks::peak_detector2_fb;


    py::class_<peak_detector2_fb,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<peak_detector2_fb>>(
        m, "peak_detector2_fb", D(peak_detector2_fb))

        .def(py::init(&peak_detector2_fb::make),
             py::arg("threshold_factor_rise") = 7,
             py::arg("look_ahead") = 1000,
             py::arg("alpha") = 0.001,
             D(peak_detector2_fb, make))


        .def("set_threshold_factor_rise",
             &peak_detector2_fb::set_threshold_factor_rise,
             py::arg("thr"),
             D(peak_detector2_fb, set_threshold_factor_rise))


        .def("set_look_ahead",
             &peak_detector2_fb::set_look_ahead,
             py::arg("look"),
             D(peak_detector2_fb, set_look_ahead))


        .def("set_alpha",
             &peak_detector2_fb::set_alpha,
             py::arg("alpha"),
             D(peak_detector2_fb, set_alpha))


        .def("threshold_factor_rise",
             &peak_detector2_fb::threshold_factor_rise,
             D(peak_detector2_fb, threshold_factor_rise))


        .def("look_ahead",
             &peak_detector2_fb::look_ahead,
             D(peak_detector2_fb, look_ahead))


        .def("alpha", &peak_detector2_fb::alpha, D(peak_detector2_fb, alpha))

        ;
}
