/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(lfsr_32k.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(4986998c4a85bc4255c729571c35f1af)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/blocks/lfsr_32k.h>
// pydoc.h is automatically generated in the build directory
#include <lfsr_32k_pydoc.h>

void bind_lfsr_32k(py::module& m)
{

    using lfsr_32k = ::gr::blocks::lfsr_32k;


    py::class_<lfsr_32k, std::shared_ptr<lfsr_32k>>(m, "lfsr_32k", D(lfsr_32k))

        .def(py::init<>(), D(lfsr_32k, lfsr_32k, 0))
        .def(py::init<gr::blocks::lfsr_32k const&>(),
             py::arg("arg0"),
             D(lfsr_32k, lfsr_32k, 1))


        .def("reset", &lfsr_32k::reset, D(lfsr_32k, reset))


        .def("next_bit", &lfsr_32k::next_bit, D(lfsr_32k, next_bit))


        .def("next_byte", &lfsr_32k::next_byte, D(lfsr_32k, next_byte))


        .def("next_short", &lfsr_32k::next_short, D(lfsr_32k, next_short))

        ;
}
