/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(file_sink_base.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(3ecad3bebf54f73e2fa57cb95d5154c8)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/blocks/file_sink_base.h>
// pydoc.h is automatically generated in the build directory
#include <file_sink_base_pydoc.h>

void bind_file_sink_base(py::module& m)
{

    using file_sink_base = ::gr::blocks::file_sink_base;


    py::class_<file_sink_base, std::shared_ptr<file_sink_base>>(
        m, "file_sink_base", D(file_sink_base))

        .def(py::init<>(), D(file_sink_base, file_sink_base))


        .def("open", &file_sink_base::open, py::arg("filename"), D(file_sink_base, open))


        .def("close", &file_sink_base::close, D(file_sink_base, close))


        .def("do_update", &file_sink_base::do_update, D(file_sink_base, do_update))


        .def("set_unbuffered",
             &file_sink_base::set_unbuffered,
             py::arg("unbuffered"),
             D(file_sink_base, set_unbuffered))

        ;
}
