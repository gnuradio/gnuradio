/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(message_emitter.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(dba0a43f66d4e9a3ede741df06cedf93)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/message/message_emitter.h>
// pydoc.h is automatically generated in the build directory
#include <message_emitter_pydoc.h>

void bind_message_emitter(py::module& m)
{

    using message_emitter = ::gr::message::message_emitter;


    py::class_<message_emitter,
               gr::block,
               gr::basic_block,
               std::shared_ptr<message_emitter>>(m, "message_emitter", D(message_emitter))

        .def(py::init(&message_emitter::make),
             py::arg("msg") = pmt::get_PMT_NIL(),
             D(message_emitter, make))


        .def("set_msg",
             &message_emitter::set_msg,
             py::arg("msg"),
             D(message_emitter, set_msg))


        .def("get_n_msgs", &message_emitter::get_n_msgs, D(message_emitter, get_n_msgs))


        .def("emit",
             (void (message_emitter::*)()) & message_emitter::emit,
             D(message_emitter, emit, 0))


        .def("emit",
             (void (message_emitter::*)(pmt::pmt_t)) & message_emitter::emit,
             py::arg("msg"),
             D(message_emitter, emit, 1))

        ;
}
