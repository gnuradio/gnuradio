#!/usr/bin/env python
#
# Copyright 2012, 2018 Free Software Foundation, Inc.
#
# This file is part of GNU Radio
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
#
""" A tool for editing GNU Radio out-of-tree modules. """

import click
import sys
import os
from importlib import import_module

cmd_folder = os.path.abspath(os.path.join(os.path.dirname(__file__),
                                          '../src/gnuradio/gr-utils/python/modtool'))


class CommandCLI(click.MultiCommand):

    def list_commands(self, ctx):
        cmds = []
        for filename in os.listdir(cmd_folder):
            if filename.endswith('.py') and filename.startswith('modtool_'):
                cmds.append(filename[8:-3])
        cmds.remove('base')
        cmds.sort()
        return cmds

    def get_command(self, ctx, name):
        try:
            if sys.version_info[0] == 2:
                name = name.encode('ascii', 'replace')
            mod = import_module('gnuradio.modtool.modtool_' + name)
        except ImportError:
            click.echo('Error:', err)
            return
        return mod.cli


@click.command(cls=CommandCLI,
               epilog='Manipulate with GNU Radio modules source code tree. ' +
               'Call it without options to run specified command interactively')
def cli():
    """A tool for editing GNU Radio out-of-tree modules."""
    pass


if __name__ == '__main__':
    try:
        cli()
    except KeyboardInterrupt:
        pass
