id: zeromq_pub_sink
label: ZMQ PUB Sink
category: '[Core]/ZeroMQ Interfaces'
flags: [python, cpp]

parameters:
-   id: type
    label: IO Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        itemsize: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: vlen
    label: Vector Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: address
    label: Address
    dtype: string
-   id: timeout
    label: Timeout (msec)
    dtype: float
    default: '100'
-   id: pass_tags
    label: Pass Tags
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: hwm
    label: High Watermark
    dtype: int
    default: '-1'
    hide: ${ ('part' if hwm == -1 else 'none') }
-   id: key
    label: Filter Key
    dtype: string
    default: ''

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }

templates:
    imports: from gnuradio import zeromq
    make: zeromq.pub_sink(${type.itemsize}, ${vlen}, ${address}, ${timeout}, ${pass_tags},
        ${hwm}, ${key})
        
cpp_templates:
    includes: [ '#include <gnuradio/zeromq/pub_sink.h>' ]
    declarations: gr::zeromq::pub_sink::sptr ${id};
    make: this->${id} = gr::zeromq::pub_sink::make(${type.itemsize}, 
        ${vlen}, 
        const_cast<char *>(${address}${'.c_str())' if str(address)[0] not in '"\'' else ')'},
        ${timeout}, 
        ${pass_tags}, 
        ${hwm});
    link: ['gnuradio::gnuradio-zeromq']      
    translations:
      'True': 'true'
      'False': 'false'

file_format: 1
