module: soapy
block: limesdr_source
label: LimeSDR Source
blocktype: grc
category: '[Core]/Soapy'

typekeys:
  - id: T
    type: class
    options: 
        - cf32
        # - rf32

grc:
    templates:
      imports: from gnuradio import soapy
      make: |
          dev = 'driver=lime'
          stream_args = ''
          tune_args = ['']
          settings = ['']

          self.${id} = soapy.source_${T.fcn}(dev, 1, ${dev_args},
                                    stream_args, tune_args, settings)
          self.${id}.set_sample_rate(0, ${samp_rate})
          self.${id}.set_bandwidth(0, ${bandwidth})
          self.${id}.set_frequency(0, ${center_freq})
          self.${id}.set_frequency_correction(0, ${freq_correction})
          self.${id}.set_gain(0, min(max(${gain}, -12.0), 61.0))
      callbacks:
        - set_sample_rate(0, ${samp_rate})
        - set_bandwidth(0, ${bandwidth})
        - set_frequency(0, ${center_freq})
        - set_frequency_correction(0, ${freq_correction})
        - set_gain(0, min(max(${gain}, -12.0), 61.0))


parameters:
    - id: dev_args
      label: Device arguments
      dtype: string
      grc:
        hide: ${'part' if not dev_args else 'none'}

    - id: samp_rate
      label: Sample Rate
      dtype: rf32
      grc:
        default: 'samp_rate'

    - id: bandwidth
      label: Bandwidth
      dtype: rf32
      grc:
        category: RF Options
        default: '0.0'
        hide: part

    - id: center_freq
      label: 'Center Freq (Hz)'
      dtype: rf32
      grc:
        category: RF Options
        default: 'freq'

    - id: freq_correction
      label: 'Frequency Correction (PPM)'
      dtype: rf32
      grc:
        category: RF Options
        default: '0'
        hide: 'part'

    - id: gain
      label: 'RF Gain (-12dB - 61dB)'
      dtype: rf32
      grc:
        category: RF Options
        default: '20.0'
        hide: 'part'

ports:
    - domain: stream
      id: out
      direction: output
      type: typekeys/T

implementations:
-   id: cpu

file_format: 1
