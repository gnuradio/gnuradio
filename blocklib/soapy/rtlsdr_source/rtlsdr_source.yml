module: soapy
block: rtlsdr_source
label: RTL SDR Source
blocktype: grc
category: '[Core]/Soapy'

typekeys:
  - id: T
    type: class
    options: 
        - cf32
        # - rf32

grc:
    flags: [python]
    templates:
        imports: |-
            from gnuradio import soapy
        make: |-
            dev = 'driver=rtlsdr'
            stream_args = ''
            tune_args = ['']
            settings = ['']

            self.${id} = soapy.source_${T.fcn}(dev, 1, ${dev_args},
                                      stream_args, tune_args, settings)
            self.${id}.set_sample_rate(0, ${samp_rate})
            self.${id}.set_gain_mode(0, ${agc})
            self.${id}.set_frequency(0, ${center_freq})
            self.${id}.set_frequency_correction(0, ${freq_correction})
            self.${id}.set_gain(0, 'TUNER', ${gain})
            
        callbacks:
          - set_sample_rate(0, ${samp_rate})
          - set_gain_mode(0, ${agc})
          - set_frequency(0, ${center_freq})
          - set_frequency_correction(0, ${freq_correction})
          - set_gain(0, 'TUNER', ${gain})


parameters:
    - id: dev_args
      label: Device arguments
      dtype: string
      grc:
        hide: ${'part' if not dev_args else 'none'}
    - id: samp_rate
      label: Sample Rate
      dtype: rf32
      grc:
          default: "samp_rate"
      settable: true
    - id: center_freq
      label: "Center Freq (Hz)"
      dtype: rf32
      grc:
          category: RF Options
          default: "freq"
      settable: true
    - id: gain
      label: "RF Gain"
      dtype: rf32
      grc:
          category: RF Options
          default: "20"
          hide: ${'all' if agc else 'part'}
      settable: true
    - id: freq_correction
      label: "Frequency Correction (PPM)"
      dtype: rf32
      default: 0
      grc:
          category: RF Options
          hide: "part"
    - id: agc
      label: "AGC"
      dtype: bool
      default: 'false'
      grc:
          category: RF Options
          hide: "part"

ports:
    - domain: stream
      id: out
      direction: output
      type: typekeys/T

implementations:
-   id: cpu

file_format: 1
