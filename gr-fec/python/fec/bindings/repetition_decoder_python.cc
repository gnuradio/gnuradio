/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(repetition_decoder.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(d2ede90f70970175ddb766451fd18cdf)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/fec/repetition_decoder.h>
// pydoc.h is automatically generated in the build directory
#include <repetition_decoder_pydoc.h>

void bind_repetition_decoder(py::module& m)
{


    py::module m_code = m.def_submodule("code");

    using repetition_decoder = ::gr::fec::code::repetition_decoder;


    py::class_<repetition_decoder,
               gr::fec::generic_decoder,
               std::shared_ptr<repetition_decoder>>(
        m_code, "repetition_decoder", D(code, repetition_decoder))

        .def_static("make",
                    &repetition_decoder::make,
                    py::arg("frame_size"),
                    py::arg("rep"),
                    py::arg("ap_prob") = 0.5,
                    D(code, repetition_decoder, make))


        .def("set_frame_size",
             &repetition_decoder::set_frame_size,
             py::arg("frame_size"),
             D(code, repetition_decoder, set_frame_size))


        .def("rate", &repetition_decoder::rate, D(code, repetition_decoder, rate))

        ;
}
