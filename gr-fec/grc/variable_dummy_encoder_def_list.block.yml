id: variable_dummy_encoder_def
label: Dummy Encoder Definition
flags: [ show_id ]

parameters:
-   id: ndim
    label: Parallelism
    dtype: enum
    default: '0'
    options: ['0', '1', '2']
-   id: dim1
    label: Dimension 1
    dtype: int
    default: '1'
    hide: ${ ('none' if (int(ndim) >= 1) else 'all') }
-   id: dim2
    label: Dimension 2
    dtype: int
    default: '1'
    hide: ${ ('none' if (int(ndim) >= 2) else 'all') }
-   id: framebits
    label: Frame Bits
    dtype: int
    default: '2048'
value: ${ fec.dummy_encoder_make(framebits) }

templates:
    imports: from gnuradio import fec
    var_make: |-
        % if int(ndim)==0:
        self.${id} = ${id} = fec.dummy_encoder_make(${framebits})\
        % elif int(ndim)==1:
        self.${id} = ${id} = list(map((lambda a:fec.dummy_encoder_make(${framebits})),\
        range(0,${dim1})))
        % else:
        self.${id} = ${id} = list(map((lambda b:list(map((lambda a: \
        fec.dummy_encoder_make(${framebits})),\
        range(0,${dim2})))), range(0,${dim1})))
        % endif

documentation: ""

file_format: 1
