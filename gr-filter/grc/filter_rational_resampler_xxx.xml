<?xml version="1.0"?>
<!--
###################################################
##Rational Resampler Base
###################################################
 -->
<block>
	<name>Rational Resampler</name>
	<key>rational_resampler_xxx</key>
	<import>from gnuradio import filter</import>
	<import>from gnuradio.filter import firdes</import>
	<make>filter.rational_resampler_$(type)(
        interpolation=$interp,
        decimation=$decim,
#if $taps()
        taps=$taps,
#else
        taps=None,
#end if
#if $fbw() != 0
        fractional_bw=$fbw,
#else
        fractional_bw=None,
#end if
)</make>
	<callback>set_taps($taps)</callback>
	<param>
		<name>Type</name>
		<key>type</key>
		<type>enum</type>
		<option>
			<name>Complex->Complex (Complex Taps)</name>
			<key>ccc</key>
			<opt>input:complex</opt>
			<opt>output:complex</opt>
			<opt>taps:complex_vector</opt>
		</option>
		<option>
			<name>Complex->Complex (Real Taps)</name>
			<key>ccf</key>
			<opt>input:complex</opt>
			<opt>output:complex</opt>
			<opt>taps:real_vector</opt>
		</option>
		<option>
			<name>Float->Complex (Complex Taps)</name>
			<key>fcc</key>
			<opt>input:float</opt>
			<opt>output:complex</opt>
			<opt>taps:complex_vector</opt>
		</option>
		<option>
			<name>Float->Float (Real Taps)</name>
			<key>fff</key>
			<opt>input:float</opt>
			<opt>output:float</opt>
			<opt>taps:real_vector</opt>
		</option>
	</param>
	<param>
		<name>Interpolation</name>
		<key>interp</key>
		<value>1</value>
		<type>int</type>
	</param>
	<param>
		<name>Decimation</name>
		<key>decim</key>
		<value>1</value>
		<type>int</type>
	</param>
	<param>
		<name>Taps</name>
		<key>taps</key>
                <value></value>
		<type>$type.taps</type>
	</param>
	<param>
		<name>Fractional BW</name>
		<key>fbw</key>
                <value>0</value>
		<type>real</type>
	</param>
	<sink>
		<name>in</name>
		<type>$type.input</type>
	</sink>
	<source>
		<name>out</name>
		<type>$type.output</type>
	</source>
</block>
