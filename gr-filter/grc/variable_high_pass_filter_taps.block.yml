id: variable_high_pass_filter_taps
label: High-pass Filter Taps
flags: [ show_id, python ]

parameters:
-   id: gain
    label: Gain
    dtype: float
    default: '1.0'
-   id: samp_rate
    label: Sample Rate (Hz)
    dtype: float
    default: samp_rate
-   id: cutoff_freq
    label: Cutoff Freq (Hz)
    dtype: float
-   id: width
    label: Transition Width (Hz)
    dtype: float
-   id: win
    label: Window
    dtype: raw
    default: firdes.WIN_HAMMING
    options: [firdes.WIN_HAMMING, firdes.WIN_HANN, firdes.WIN_BLACKMAN, firdes.WIN_RECTANGULAR,
        firdes.WIN_KAISER]
    option_labels: [Hamming, Hann, Blackman, Rectangular, Kaiser]
-   id: beta
    label: Beta
    dtype: float
    default: '6.76'
value: ${ firdes.high_pass(gain, samp_rate, cutoff_freq, width, win, beta) }

templates:
    imports: from gnuradio.filter import firdes
    var_make: |-
        self.${id} = ${id} = firdes.high_pass(${gain}, ${samp_rate}, ${cutoff_freq},\
        ${width}, ${win}, ${beta})

cpp_templates:
    includes: ['#include <gnuradio/filter/firdes.h>']
    declarations: 'filter::firdes::sptr ${id};'
    var_make: |-
        this->${id} = ${id} = firdes.high_pass(${gain}, ${samp_rate}, ${cutoff_freq},\
        ${width}, ${win}, ${beta});
    link: ['gnuradio-filter']

documentation: |-
    This variable is a convenience wrapper around a call to firdes.high_pass(...).

        The beta parameter only applies to the Kaiser window.

file_format: 1
