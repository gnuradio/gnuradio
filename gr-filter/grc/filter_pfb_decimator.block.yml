id: pfb_decimator_ccf
label: Polyphase Decimator

parameters:
-   id: decim
    label: Decimation
    dtype: int
-   id: taps
    label: Taps
    dtype: real_vector
-   id: channel
    label: Output Channel
    dtype: int
    default: '0'
-   id: atten
    label: Stop-band Attenuation
    dtype: real
    default: '100'
-   id: fft_rot
    label: Use FFT Rotator
    dtype: raw
    default: 'True'
    options: ['True', 'False']
    hide: part
-   id: fft_filts
    label: Use FFT Filters
    dtype: raw
    default: 'True'
    options: ['True', 'False']
    hide: part
-   id: samp_delay
    label: Sample Delay
    dtype: int
    default: '0'
    hide: part

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: complex

templates:
    imports: |-
        from gnuradio.filter import pfb
        from gnuradio.filter import firdes
    make: "pfb.decimator_ccf(\n\t  ${decim},\n\t  ${taps},\n\t  ${channel},\n\t  ${atten},\n\
        \          ${fft_rot},\n          ${fft_filts})\nself.${id}.declare_sample_delay(${samp_delay})\n\
        \t"
    callbacks:
    - set_taps(${taps})
    - set_channel(int(${channel}))

file_format: 1
