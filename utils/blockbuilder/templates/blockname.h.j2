{% import 'macros.j2' as macros -%}
{{ macros.header() }}
#pragma once

#include <gnuradio/{{blocktype}}.h>
#include <gnuradio/types.h>

{{ macros.includes(includes) }}

// TODO: only put this here if lang:python in implementations
#include <pybind11/pybind11.h> // must be first
namespace py = pybind11;

namespace gr {
namespace {{module}} {

{{ macros.class_statement(block, blocktype, inherits) }}
{
public:
{{ macros.block_args(parameters) }}
    
    using sptr = std::shared_ptr<{{ block }}>;
    {{ macros.cotr_statement(block) }};

    {{ macros.implementations(implementations) }}

    {{ macros.callbacks(callbacks) }}    

    // TODO: only put this here if lang:python in implementations
    virtual py::object py_method(const std::string& name, py::tuple args = py::tuple(), py::dict kwargs = py::dict()) = 0;

protected:
    {{ macros.message_ports(ports) }} 

{{ macros.parameter_declarations(parameters) }}
};

} // namespace {{ module }}
} // namespace gr
