#autogenerated
# This file has been automatically generated and will be overwritten by meson build
# Remove the #autogenerated comment at the top if you wish for the build scripts to leave
# this file alone
srcs = []

{% if blocktype == 'grc' %}
gen_srcs = custom_target('gen_{{block}}_srcs',
                        input : ['{{block}}.yml'],
                        output : ['{{module}}_{{block}}.block.yml'
                        ], 
                        command : ['python3', join_paths(SCRIPTS_DIR,'process_folder.py'),
                            '--yaml_file', '@INPUT@', 
                            '--output-grc', '@OUTPUT0@', 
                            '--build_dir', join_paths(meson.build_root())],
                        install : true,
                        install_dir : ['share/gnuradio/grc/blocks'])
{% else %}
{% set vars = {'pyshell': False, 'cpp': False} %}
{% for impl in implementations -%}
{% if 'lang' not in impl or impl['lang'] == 'cpp'%}
{% if vars.update({'pyshell': vars.pyshell, 'cpp': True}) %} {% endif %}
if IMPLEMENT_{{impl['id'] | upper}}
    srcs += files(['{{block}}_{{impl['id']}}.cc'])
{% if impl['id'] | lower == 'cuda' -%}
{% for cufile in cufiles -%}
    {{module}}_cu_sources += files(['{{cufile}}'])
{% endfor -%}
{% endif -%}
endif
{% elif 'lang' in impl and impl['lang'] == 'python' and not vars.pyshell -%}
{% if vars.update({'pyshell': True, 'cpp': vars.cpp}) %} {% endif %}
{% endif %}
{% endfor -%}

{% set num_grc_outputs = 0 -%}
{% set grc_idxs = ['0'] -%}
gen_srcs = custom_target('gen_{{block}}_srcs',
                        input : ['{{block}}.yml'],
                        output : ['{{block}}.cc', '{{block}}.h', '{{block}}_pybind.cc', 
                        '{{module}}_{{block}}.block.yml'
                        ], 
                        command : ['python3', join_paths(SCRIPTS_DIR,'process_folder.py'),
                            '--yaml_file', '@INPUT@', 
                            '--output-cc', '@OUTPUT0@', 
                            '--output-h', '@OUTPUT1@', 
                            '--output-pybind', '@OUTPUT2@', 
                            '--output-grc', [{%for ii in grc_idxs%}'@OUTPUT{{loop.index0+3}}@',{%endfor%}], 
                            '--grc-index', [{%for ii in grc_idxs%}'{{ii}}',{%endfor%}],
                            '--build_dir', join_paths(meson.build_root())
                            {{',' + '\'--enable_python\'' if GR_ENABLE_PYTHON}}],
                        install : true,
                        install_dir : [false, 'include/gnuradio/{{module}}',false,{%for ii in grc_idxs%}'share/gnuradio/grc/blocks',{%endfor%}])

gen_impls = custom_target('gen_{{block}}_impl',
                        input : ['{{block}}.yml'],
                        output : ['{{block}}_impl_gen.h'],
                        command : ['python3', join_paths(SCRIPTS_DIR,'process_gen_impl.py'),
                            '--yaml_file', '@INPUT@', 
                            '--output', '@OUTPUT@', 
                            '--build_dir', join_paths(meson.build_root())],
                        install : false)

{{module}}_deps += declare_dependency(sources : [gen_srcs[1]] ) 
{{module}}_sources += [srcs, gen_srcs[0], gen_impls]

if GR_ENABLE_PYTHON 
    {% if vars.pyshell -%}
    # If we have python implementations, generate the pyshell
    gen_pyshell = custom_target('gen_{{block}}_pyshell',
                            input : ['{{block}}.yml'],
                            output : ['{{block}}_pyshell.h','{{block}}_pyshell.cc'],
                            command : ['python3', join_paths(SCRIPTS_DIR,'gen_pyshell.py'),
                                '--yaml_file', '@INPUT@', 
                                '--output-h', '@OUTPUT0@', 
                                '--output-cc', '@OUTPUT1@', 
                                '--build_dir', join_paths(meson.build_root())],
                            install : false)
    {{module}}_sources += gen_pyshell[1]
    {% for impl in implementations -%}
    {% if 'lang' in impl and impl['lang'] == 'python'%}
    {% if GR_PURELIB %}
    py3.install_sources(files('{{impl['id']}}/{{block}}.py'), subdir : join_paths('gnuradio','{{module}}','{{impl['id']}}'), pure : true )
    {% else %}
    py3.install_sources(files('{{impl['id']}}/{{block}}.py'), subdir : join_paths('gnuradio','{{module}}','{{impl['id']}}'), pure : false )
    {% endif %}
    subdir('{{impl['id']}}')
    {% endif %}
    {% endfor -%}
    

    {% endif %}

    {{module}}_pybind_sources += gen_srcs[2]
    {{module}}_pybind_names += '{{block}}'

    fs = import('fs')
    if fs.exists('qa_{{block}}.py')
        test('qa_{{block}}', py3, args : files('qa_{{block}}.py'), env: TEST_ENV)
    endif
    
endif
{% endif %}
