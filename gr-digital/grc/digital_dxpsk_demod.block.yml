id: digital_dxpsk_demod
label: DPSK Demod
category: '[Core]/Deprecated'

parameters:
-   id: type
    label: Type
    dtype: enum
    options: [dbpsk, dqpsk]
    option_labels: [DBPSK, DQPSK]
-   id: samples_per_symbol
    label: Samples/Symbol
    dtype: int
    default: '2'
-   id: excess_bw
    label: Excess BW
    dtype: real
    default: '0.35'
-   id: freq_bw
    label: FLL Bandwidth
    dtype: real
    default: 6.28/100.0
-   id: phase_bw
    label: Phase Loop Bandwidth
    dtype: real
    default: 6.28/100.0
-   id: timing_bw
    label: Timing Bandwidth
    dtype: real
    default: 6.28/100.0
-   id: mod_code
    label: Gray Code
    dtype: enum
    options: ['"gray"', '"none"']
    option_labels: ['Yes', 'No']
-   id: verbose
    label: Verbose
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: ['On', 'Off']
    hide: ${ ('part' if str(verbose) == 'False' else 'none') }
-   id: log
    label: Log
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: ['On', 'Off']
    hide: ${ ('part' if str(log) == 'False' else 'none') }
-   id: sync_out
    label: Sync Out
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    option_labels: ['On', 'Off']

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: stream
    dtype: byte

templates:
    imports: from gnuradio import digital
    make: "digital.${type}_demod(\n\tsamples_per_symbol=${samples_per_symbol},\n\t\
        excess_bw=${excess_bw},\n\tfreq_bw=${freq_bw},\n\tphase_bw=${phase_bw},\n\t\
        timing_bw=${timing_bw},\n\tmod_code=${mod_code},\n\tverbose=${verbose},\n\t\
        log=${log}\n)"
    callbacks:
    - clock_recov.set_loop_bandwidth(${phase_bw})
    - time_recov.set_loop_bandwidth(${timing_bw})

file_format: 1
