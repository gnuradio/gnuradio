/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(packet_headerparser_b.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(9035e8b3538d77885426b441ff9bc5c8)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/digital/packet_headerparser_b.h>
// pydoc.h is automatically generated in the build directory
#include <packet_headerparser_b_pydoc.h>

void bind_packet_headerparser_b(py::module& m)
{
    using packet_headerparser_b = gr::digital::packet_headerparser_b;


    py::class_<packet_headerparser_b,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<packet_headerparser_b>>(m, "packet_headerparser_b")

        .def(py::init((std::shared_ptr<packet_headerparser_b>(*)(
                          const gr::digital::packet_header_default::sptr&)) &
                      packet_headerparser_b::make),
             py::arg("header_formatter"),
             D(packet_headerparser_b, make, 0))
        .def(py::init(
                 (std::shared_ptr<packet_headerparser_b>(*)(long, const std::string&)) &
                 packet_headerparser_b::make),
             py::arg("header_len"),
             py::arg("len_tag_key"),
             D(packet_headerparser_b, make, 1));
}
