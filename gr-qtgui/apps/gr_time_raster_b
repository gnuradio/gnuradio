#!/usr/bin/env python
#
# Copyright 2013 Free Software Foundation, Inc.
#
# This file is part of GNU Radio
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
#

from gnuradio import gr
from gnuradio import blocks
import scipy

try:
    import gnuradio.qtgui.plot_time_raster_base as plot_base
except ImportError:
    import plot_time_raster_base as plot_base

try:
    from gnuradio import qtgui
    from PyQt4 import QtGui, QtCore
    import sip
except ImportError:
    print "Error: Program requires PyQt4 and gr-qtgui."
    sys.exit(1)

class plot_time_raster_b(plot_base.plot_base):
    def __init__(self, filelist, samp_rate,
                 start, nsamples, max_nsamples,
                 nrows, ncols,
                 auto_scale):
        plot_base.plot_base.__init__(self, filelist, samp_rate,
                                     start, nsamples, max_nsamples,
                                     auto_scale)
        self._nrows = nrows
        self._ncols = ncols
        self.read_samples = plot_base.read_samples_b
        self.dsize = gr.sizeof_char
        self.src_type = blocks.vector_source_b
        self.gui_snk = qtgui.time_raster_sink_b(self._samp_rate, self._nrows, self._ncols,
                                                [], [], "", self._nsigs)
        self.setup()

def main():
    description = "Plots a list of files on a scope plot. Files are a binary list of chars."
    (options, args) = plot_base.setup_options(description)

    filelist = list(args)
    max_nsamples = plot_base.find_max_nsamples(filelist)

    tb = plot_time_raster_b(filelist, options.sample_rate,
                            options.start, options.nsamples, max_nsamples,
                            options.nrows, options.ncols,
                            not options.no_auto_scale)

    main_box = plot_base.plot_time_raster_form(tb, 'GNU Radio Time Plot')
    main_box.show()

    tb.run()
    tb.qapp.exec_()

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        pass
